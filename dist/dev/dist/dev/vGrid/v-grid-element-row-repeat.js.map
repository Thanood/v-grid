{"version":3,"sources":["vGrid/v-grid-element-row-repeat.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMQ,Y,qBAAA,M;AAAQ,Y,qBAAA,M;AAAQ,mB,qBAAA,a;AAAe,oB,qBAAA,c;AAAgB,e,qBAAA,S;AAAW,uB,qBAAA,iB;AAAkB,c,qBAAA,Q;AAAU,c,qBAAA,Q;;AACtF,W,UAAA,K;;;uCA4BK,qB,WAzBZ,Q,UACA,cAAc,mBAAd,C,UACA,eAAe,UAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,EAA+B,WAA/B,EAA+C;;AAE7D,YAAI,wBAAwB,QAAQ,oBAAR,CAA6B,mBAA7B,EAAkD,CAAlD,CAA5B;AACA,YAAI,qBAAqB,wBAAwB,sBAAsB,SAA9C,GAAwD,IAAjF;AACA,YAAI,uBAAuB,EAA3B,EAA+B;AAC7B,sBAAY,cAAZ,GAA6B,kBAA7B;AACD;;AAED,YAAI,qBAAqB,QAAQ,oBAAR,CAA6B,gBAA7B,EAA+C,CAA/C,CAAzB;AACA,YAAI,kBAAkB,qBAAqB,mBAAmB,SAAxC,GAAkD,IAAxE;AACA,YAAI,oBAAoB,EAAxB,EAA4B;AAC1B,sBAAY,WAAZ,GAA0B,eAA1B;AACD;;AAGD,YAAG,CAAC,eAAJ,EAAoB;AAClB,sBAAY,WAAZ,GAA0B,QAAQ,SAAlC;AACD;;AAED,gBAAQ,SAAR,GAAoB,EAApB;AAED,OArBA,C,UAsBA,OAAO,OAAP,EAAgB,KAAhB,EAAuB,iBAAvB,C;AAIC,uCAAY,OAAZ,EAAqB,KAArB,EAA4B,iBAA5B,EAA+C;AAAA;;AAC7C,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,KAAL,GAAa,KAAb;AACA,eAAK,WAAL,GAAmB,kBAAkB,kBAAlB,CAAqC,WAAxD;AACA,eAAK,cAAL,GAAsB,kBAAkB,kBAAlB,CAAqC,cAA3D;AAED;;wCAGD,I,iBAAK,c,EAAgB;AACnB,eAAK,cAAL,GAAsB,cAAtB;AACA,eAAK,KAAL,CAAW,WAAX,CAAuB,QAAvB,GAAkC,IAAlC;AACA,eAAK,KAAL,CAAW,WAAX,CAAuB,iBAAvB,GAA2C,KAAK,WAAhD;AACA,eAAK,KAAL,CAAW,WAAX,CAAuB,uBAAvB,GAAiD,KAAK,cAAtD;AACD,S","file":"vGrid/v-grid-element-row-repeat.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    VGridRowRepeat\r\n *    Custom element just repeating the heml inside it for each row\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nimport {inject, noView, customElement, processContent, Container, TargetInstruction,bindable, ViewSlot} from 'aurelia-framework';\r\nimport {VGrid} from './v-grid';\r\n\r\n\r\n@noView()\r\n@customElement('v-grid-row-repeat')\r\n@processContent((compiler, resources, element, instruction) => {\r\n\r\n  var headerTemplateElement = element.getElementsByTagName(\"V-HEADER-TEMPLATE\")[0];\r\n  let headerTemplateHtml = headerTemplateElement ? headerTemplateElement.innerHTML:null;\r\n  if (headerTemplateHtml !== '') {\r\n    instruction.headerTemplate = headerTemplateHtml;\r\n  }\r\n\r\n  var rowTemplateElement = element.getElementsByTagName(\"V-ROW-TEMPLATE\")[0];\r\n  let rowTemplateHtml = rowTemplateElement ? rowTemplateElement.innerHTML:null;\r\n  if (rowTemplateHtml !== '') {\r\n    instruction.rowTemplate = rowTemplateHtml;\r\n  }\r\n\r\n  //if we didnt get anything we use it all\r\n  if(!rowTemplateHtml){\r\n    instruction.rowTemplate = element.innerHTML;\r\n  }\r\n\r\n  element.innerHTML = '';\r\n\r\n})\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridElementRowRepeat {\r\n\r\n\r\n  constructor(element, vGrid, targetInstruction) {\r\n    this.element = element;\r\n    this.vGrid = vGrid;\r\n    this.rowTemplate = targetInstruction.elementInstruction.rowTemplate;\r\n    this.headerTemplate = targetInstruction.elementInstruction.headerTemplate;\r\n\r\n  }\r\n\r\n\r\n  bind(bindingContext) {\r\n    this.bindingContext = bindingContext;\r\n    this.vGrid.vGridConfig.repeater = true;\r\n    this.vGrid.vGridConfig.repeatRowTemplate = this.rowTemplate;\r\n    this.vGrid.vGridConfig.repeatRowHeaderTemplate = this.headerTemplate;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]}