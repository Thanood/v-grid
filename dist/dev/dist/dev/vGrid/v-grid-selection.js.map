{"version":3,"sources":["vGrid/v-grid-selection.js"],"names":[],"mappings":"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","file":"vGrid/v-grid-selection.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\n *    vGridSelection\n *    This just inserts the strings into html templates\n *    Created by vegar ringdal\n *\n ****************************************************************************************************************/\nexport class VGridSelection {\n\n  constructor(mode, vGrid) {\n\n    this.vGrid = vGrid;\n    this.selectionMode = \"none\";\n    this.lastRowSelected = -1; //this need to be reset when filtering\n    this.lastKeyKodeUsed = \"none\"; //this ned to be reset when filtering\n    this.selectedRows = 0;\n\n    if (mode === false) {\n      this.selectionMode = \"single\";\n    }\n    if (mode === true) {\n      this.selectionMode = \"multiple\";\n    }\n\n    this.selection = new Set([]);\n\n\n  }\n\n\n  triggerEvent(){\n    //send out event\n    this.vGrid.sendCollectionEvent();\n  }\n\n\n  setMode(mode) {\n    this.selectionMode = \"none\";\n    if (mode === false) {\n      this.selectionMode = \"single\";\n    }\n    if (mode === true) {\n      this.selectionMode = \"multiple\";\n    }\n\n  }\n\n\n  isSelected(row) {\n    var result = false;\n    if (this.selectedRows > 0) {\n      if (this.vGrid.vGridCollectionFiltered[row]) {\n        result = this.selection.has(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\n      }\n    }\n    return result;\n  }\n\n\n  isSelectedMain(row) {\n    var result = false;\n    if (this.selectedRows > 0) {\n      if (this.vGrid.vGridCollection[row]) {\n        result = this.selection.has(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\n      }\n    }\n    return result;\n  }\n\n\n  deSelect(row) {\n    if (this.vGrid.vGridCollectionFiltered[row]) {\n      this.selection.delete(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\n    }\n    this.selectedRows = this.selection.size;\n\n    //send out event\n    this.triggerEvent();\n\n  }\n\n\n  deSelectMain(row) {\n    if (this.vGrid.vGridCollection[row]) {\n      this.selection.delete(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\n    }\n    this.selectedRows = this.selection.size;\n\n    //send out event\n    this.triggerEvent();\n\n  }\n\n\n  select(row, addToSelection) {\n    switch (this.selectionMode) {\n      case \"none\":\n      case null:\n      case undefined:\n        break;\n      case \"single\":\n        this.selection.clear();\n        if (this.vGrid.vGridCollectionFiltered[row]) {\n          this.selection.add(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\n        }\n        this.selectedRows = this.selection.size;\n        break;\n      case \"multiple\":\n        if (!addToSelection) {\n          this.selection.clear();\n          if (this.vGrid.vGridCollectionFiltered[row]) {\n            this.selection.add(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\n          }\n          this.selectedRows = this.selection.size;\n        } else {\n          if (this.vGrid.vGridCollectionFiltered[row]) {\n            this.selection.add(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\n          }\n          this.selectedRows = this.selection.size;\n        }\n    }\n\n    //send out event\n    this.triggerEvent();\n\n  }\n\n\n  selectMain(row, addToSelection) {\n    switch (this.selectionMode) {\n      case \"none\":\n      case null:\n      case undefined:\n        break;\n      case \"single\":\n        this.selection.clear();\n        if (this.vGrid.vGridCollection[row]) {\n          this.selection.add(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\n        }\n        this.selectedRows = this.selection.size;\n        break;\n      case \"multiple\":\n        if (!addToSelection) {\n          this.selection.clear();\n          if (this.vGrid.vGridCollection[row]) {\n            this.selection.add(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\n          }\n          this.selectedRows = this.selection.size;\n        } else {\n          if (this.vGrid.vGridCollection[row]) {\n            this.selection.add(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\n          }\n          this.selectedRows = this.selection.size;\n        }\n    }\n\n    //send out event\n    this.triggerEvent();\n\n  }\n\n\n  selectRange(start, end) {\n    if (this.selectionMode === \"multiple\") {\n      this.selection.clear();\n      for (var i = start; i < end + 1; i++) {\n        this.selection.add(this.vGrid.vGridCollectionFiltered[i][this.vGrid.vGridRowKey]);\n      }\n      this.selectedRows = this.selection.size;\n    }\n\n    //send out event\n    this.triggerEvent();\n  }\n\n\n  selectAll() {\n    if (this.selectionMode === \"multiple\") {\n      for (var i = 0; i < this.vGrid.vGridCollectionFiltered.length; i++) {\n        this.selection.add(this.vGrid.vGridCollectionFiltered[i][this.vGrid.vGridRowKey]);\n      }\n      this.selectedRows = this.selection.size;\n    }\n    if (this.selectionMode === \"single\" && this.vGrid.vGridCurrentRow >= 0) {\n      this.selection.clear();\n      this.selection.add(this.vGrid.vGridCollectionFiltered[this.vGrid.vGridCurrentRow][this.vGrid.vGridRowKey]);\n      this.selectedRows = this.selection.size;\n    }\n\n    //send out event\n    this.triggerEvent();\n\n  }\n\n  deSelectAll() {\n    for (var i = 0; i < this.vGrid.vGridCollectionFiltered.length; i++) {\n      this.selection.delete(this.vGrid.vGridCollectionFiltered[i][this.vGrid.vGridRowKey]);\n    }\n    this.selectedRows = this.selection.size;\n\n    //send out event\n    this.triggerEvent();\n  }\n\n\n  selectRangeMain(start, end) {\n    if (this.selectionMode === \"multiple\") {\n      this.selection.clear();\n      for (var i = start; i < end + 1; i++) {\n        this.selection.add(this.vGrid.vGridCollection[i][this.vGrid.vGridRowKey]);\n      }\n      this.selectedRows = this.selection.size;\n    }\n\n    //send out event\n    this.triggerEvent();\n  }\n\n\n  reset() {\n    if (this.selectedRows > 0) {\n      this.selection.clear();\n    }\n    this.lastRowSelected = -1;\n    this.lastKeyKodeUsed = \"none\";\n    this.selectedRows = this.selection.size;\n\n    //send out event\n    this.triggerEvent();\n  }\n\n\n  getSelectedRows() {\n    var array = [];\n    if (this.selectedRows > 0) {\n      this.vGrid.vGridCollectionFiltered.forEach((x, index) => {\n        if (this.selection.has(x[this.vGrid.vGridRowKey]) === true) {\n          array.push(index);\n        }\n      });\n    }\n    return array;\n\n  }\n\n\n  getSelectedRowsMain() {\n    var array = [];\n    if (this.selectedRows > 0) {\n      this.vGrid.vGridCollection.forEach((x, index) => {\n        if (this.selection.has(x[this.vGrid.vGridRowKey]) === true) {\n          array.push(index);\n        }\n      });\n    }\n    return array;\n  }\n\n  setSelectedRows(newRows) {\n    if (this.selectedRows > 0) {\n      this.selection.clear();\n    }\n    for (var i = 0; i < newRows.length; i++) {\n      this.selection.add(this.vGrid.vGridCollectionFiltered[newRows[i]][this.vGrid.vGridRowKey]);\n    }\n    this.selectedRows = this.selection.size;\n\n    //send out event\n    this.triggerEvent();\n\n  }\n\n\n  setSelectedRowsMain(newRows) {\n    if (this.selectedRows > 0) {\n      this.selection.clear();\n    }\n    for (var i = 0; i < newRows.length; i++) {\n      this.selection.add(this.vGrid.vGridCollection[newRows[i]][this.vGrid.vGridRowKey]);\n    }\n    this.selectedRows = this.selection.size;\n\n    //send out event\n    this.triggerEvent();\n\n  }\n\n\n  /****************************************************************************************************************************\n   * fixes highlight and select...\n   ****************************************************************************************************************************/\n  highlight(e, currentRow, vGridGenerator) {\n\n    var isSel;\n    var manualSel = this.vGrid.vGridConfig.attManualSelection;\n    if (!manualSel) {\n      var currentselectedRows = this.getSelectedRows();\n      var currentKeyKode = \"\";\n\n      if (currentRow !== this.lastRowSelected || currentselectedRows[0] !== currentRow) {\n\n        if (currentRow <= (vGridGenerator.vGridConfig.getCollectionLength() - 1)) { //do I need to check this?\n\n          if (this.selectionMode === \"multiple\") { //if multiselect duh!\n\n\n\n            if (e.shiftKey) {\n              currentKeyKode = \"shift\";\n              currentselectedRows = this.getSelectedRows();\n              if (currentselectedRows.length > 0 && this.lastKeyKodeUsed === \"none\") {\n                this.lastRowSelected = currentselectedRows[0];\n                this.lastKeyKodeUsed = \"shift\";\n              }\n            }\n\n            if (e.ctrlKey) {\n              currentKeyKode = \"ctrl\";\n            }\n\n            if (!e.ctrlKey && !e.shiftKey) {\n              currentKeyKode = \"none\";\n            }\n\n            switch (true) {\n              case currentKeyKode === \"none\":\n                this.select(currentRow);\n                break;\n              case this.lastKeyKodeUsed === \"shift\" && currentKeyKode === \"ctrl\":\n\n                isSel = this.isSelected(currentRow);\n                if (isSel === true) {\n                  this.deSelect(currentRow);\n                } else {\n                  this.select(currentRow, true);\n                }\n                this.lastRowSelected = currentRow;\n                break;\n\n              case this.lastKeyKodeUsed === \"ctrl\" && currentKeyKode === \"shift\":\n                var oldSel = this.getSelectedRows();\n                this.selectRange(this.lastRowSelected, currentRow);\n                var newSel = this.getSelectedRows();\n                this.setSelectedRows(oldSel.concat(newSel));\n\n                break;\n\n              case this.lastKeyKodeUsed === \"ctrl\" && currentKeyKode === \"ctrl\":\n\n                isSel = this.isSelected(currentRow);\n                if (isSel === true) {\n                  this.deSelect(currentRow);\n                } else {\n                  this.select(currentRow, true);\n                }\n                this.lastRowSelected = currentRow;\n                break;\n\n              case this.lastKeyKodeUsed === \"none\" && currentKeyKode === \"ctrl\":\n\n                isSel = this.isSelected(currentRow);\n                if (isSel === true) {\n                  this.deSelect(currentRow);\n                } else {\n                  this.select(currentRow, true);\n                }\n                this.lastRowSelected = currentRow;\n                break;\n\n              case this.lastKeyKodeUsed === \"shift\" && currentKeyKode === \"shift\":\n\n                if (this.lastRowSelected > currentRow) {\n                  this.selectRange(currentRow, this.lastRowSelected);\n                } else {\n                  this.selectRange(this.lastRowSelected, currentRow);\n                }\n\n                break;\n\n              case this.lastKeyKodeUsed === \"none\" && currentKeyKode === \"shift\":\n\n                if (this.lastRowSelected !== -1) {\n                  if (this.lastRowSelected > currentRow) {\n                    this.selectRange(currentRow, this.lastRowSelected);\n                  } else {\n                    this.selectRange(this.lastRowSelected, currentRow);\n                  }\n                } else {\n                  this.lastRowSelected = currentRow;\n                  this.select(currentRow);\n                }\n                break;\n              default:\n                console.error(\"error, this should not happen, debug selection\");\n            }\n          } else {\n            this.select(currentRow);\n          }\n          this.lastKeyKodeUsed = currentKeyKode;\n\n          //update selection on rows\n          vGridGenerator.updateSelectionOnAllRows();\n        }\n      } else {\n\n        //same row clicked again\n        if (e.ctrlKey) {\n          currentKeyKode = \"ctrl\";\n        }\n\n        //if ctrl button we want to remove selection\n        if (currentKeyKode === \"ctrl\") {\n          this.lastKeyKodeUsed = currentKeyKode;\n          isSel = this.isSelected(currentRow);\n          if (isSel === true) {\n            this.deSelect(currentRow);\n          }\n          this.lastRowSelected = currentRow;\n        } else {\n          //else we just want to make it current..\n          //isSel = this.isSelected(currentRow);\n          this.select(currentRow);\n        }\n        //update selection on rows\n        vGridGenerator.updateSelectionOnAllRows();\n      }\n    }\n  }\n\n\n}\n"]}