{"version":3,"sources":["vGrid/v-grid-attributes-contextmenu.js"],"names":[],"mappings":"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","file":"vGrid/v-grid-attributes-contextmenu.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    ContextMenu\r\n *    This is where I create all the <v-grid> attibutes, and set then to vGridConfig\r\n *    Main idea/source https://github.com/callmenick/Custom-Context-Menu\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\n\r\nimport {inject, customAttribute} from 'aurelia-framework';\r\nimport {VGrid} from './v-grid';\r\nimport {Contextmenu} from './v-grid-contextmenu';\r\n\r\n\r\n/*****************************************************\r\n *  context menu for header\r\n ******************************************************/\r\n@customAttribute('v-header-menu')\r\n@inject(Element, VGrid)\r\nexport class VGridHeaderMenu extends Contextmenu {\r\n  classToOpenOn = \"vGrid-header-menu\"; //class it opens menu on\r\n  altMenuLogic = null; //alt menu to open\r\n\r\n\r\n  //main menu lisntner\r\n  menuItemListener(link) {\r\n    var value = link.getAttribute(\"data-action\");\r\n\r\n    if (this.altMenuLogic) {\r\n      this.filterMenuLogic(value);\r\n    } else {\r\n      this.defaultMenu(value)\r\n    }\r\n  };\r\n\r\n\r\n  canOpen(e) {\r\n    return true;\r\n  }\r\n\r\n\r\n  //main menu to open\r\n  menuHtmlMain() {\r\n    return this.createMenuHTML([\r\n      {\r\n        action: \"\",\r\n        value: \"Options\",\r\n        isHeader: true\r\n      }, {\r\n        action: \"clear-cell\",\r\n        value: \"Clear cell\"\r\n      }, {\r\n        action: \"clear-all\",\r\n        value: \"Clear All Cells\"\r\n      }, {\r\n        action: \"show-all\",\r\n        value: \"Show all (keep filter text)\"\r\n      }, {\r\n        action: \"set-filter\",\r\n        value: \"Set Filter\"\r\n      }\r\n    ]);\r\n  }\r\n\r\n\r\n  //alt menu I manually set\r\n  menuHtmlSetFilter() {\r\n    return this.createMenuHTML([\r\n      {\r\n        action: \"\",\r\n        value: \"Set filter\",\r\n        isHeader: true\r\n      }, {\r\n        action: \"set-filter-1\",\r\n        value: \"equals\"\r\n      }, {\r\n        action: \"set-filter-2\",\r\n        value: \"less than or eq\"\r\n      }, {\r\n        action: \"set-filter-3\",\r\n        value: \"greater than or eq\"\r\n      }, {\r\n        action: \"set-filter-4\",\r\n        value: \"less than\"\r\n      }, {\r\n        action: \"set-filter-5\",\r\n        value: \"greater than\"\r\n      }, {\r\n        action: \"set-filter-6\",\r\n        value: \"contains\"\r\n      }, {\r\n        action: \"set-filter-7\",\r\n        value: \"not equal to\"\r\n      }, {\r\n        action: \"set-filter-8\",\r\n        value: \"does not contain\"\r\n      }, {\r\n        action: \"set-filter-9\",\r\n        value: \"begins with\"\r\n      }, {\r\n        action: \"set-filter-10\",\r\n        value: \"ends with\"\r\n      }\r\n    ]);\r\n  }\r\n\r\n\r\n  defaultMenu(value) {\r\n\r\n    switch (value) {\r\n      case \"clear-cell\" :\r\n        this.triggerEvent(\"filterClearCell\", {\r\n          attribute: this.value\r\n        });\r\n        this.vGrid.vGridConfig.onFilterRun(this.vGrid.vGridFilter.lastFilter);\r\n        this.toggleMenuOff();\r\n        break;\r\n      case \"clear-all\" :\r\n        this.triggerEvent(\"filterClearAll\", {\r\n          attribute: this.value\r\n        });\r\n        this.vGrid.vGridConfig.onFilterRun(this.vGrid.vGridFilter.lastFilter);\r\n        this.toggleMenuOff();\r\n        break;\r\n      case \"show-all\":\r\n        this.vGrid.vGridConfig.onFilterRun([]);\r\n        this.toggleMenuOff();\r\n        break;\r\n      case \"set-filter\":\r\n        this.replaceMenu(this.menuHtmlSetFilter());\r\n        this.altMenuLogic = this.filterMenuLogic;\r\n        break;\r\n      default:\r\n        this.toggleMenuOff();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  triggerEvent(name, data) {\r\n    let event = new CustomEvent(name, {\r\n      detail: data,\r\n      bubbles: true\r\n    });\r\n    this.vGrid.element.dispatchEvent(event);\r\n  }\r\n\r\n\r\n  filterMenuLogic(value) {\r\n    var newOperator = null;\r\n    switch (value) {\r\n      case \"set-filter-1\":\r\n        newOperator = \"=\";\r\n        break;\r\n      case \"set-filter-2\":\r\n        newOperator = \"<=\";\r\n        break;\r\n      case \"set-filter-3\":\r\n        newOperator = \">=\";\r\n        break;\r\n      case \"set-filter-4\":\r\n        newOperator = \"<\";\r\n        break;\r\n      case \"set-filter-5\":\r\n        newOperator = \">\";\r\n        break;\r\n      case \"set-filter-6\":\r\n        newOperator = \"*\";\r\n        break;\r\n      case \"set-filter-7\":\r\n        newOperator = \"!=\";\r\n        break;\r\n      case \"set-filter-8\":\r\n        newOperator = \"!*\";\r\n        break;\r\n      case \"set-filter-9\":\r\n        newOperator = \"*=\";\r\n        break;\r\n      case \"set-filter-10\":\r\n        newOperator = \"=*\";\r\n        this.toggleMenuOff();\r\n        break;\r\n      default:\r\n        this.toggleMenuOff();\r\n    }\r\n    if (newOperator) {\r\n      this.triggerEvent(\"filterUpdate\", {\r\n        attribute: this.value,\r\n        operator: newOperator\r\n      });\r\n      this.toggleMenuOff();\r\n    }\r\n\r\n\r\n    this.altMenuLogic = null; //reset to main menu again\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n/*****************************************************\r\n *  main context menu for row cells\r\n ******************************************************/\r\n\r\n@customAttribute('v-row-menu')\r\n@inject(Element, VGrid)\r\nexport class ContextRowMenu extends Contextmenu {\r\n  classToOpenOn = \"vGrid-row-menu\"; //class it opens menu on\r\n  altMenuLogic = null; //alt menu to open\r\n\r\n\r\n  //main menu lisntner\r\n  menuItemListener(link) {\r\n    var value = link.getAttribute(\"data-action\");\r\n    if (this.altMenuLogic) {\r\n      this.filterMenuLogic(value);\r\n    } else {\r\n      this.defaultMenu(value)\r\n    }\r\n  };\r\n\r\n\r\n  canOpen(e) {\r\n    return true;\r\n  }\r\n\r\n\r\n  //main menu to open\r\n  menuHtmlMain() {\r\n    return this.createMenuHTML([\r\n      {\r\n        action: \"\",\r\n        value: \"Options\",\r\n        isHeader: true\r\n      }, {\r\n        action: \"copy-cell\",\r\n        value: \"Copy cell value\",\r\n        isHeader: false\r\n      }, {\r\n        action: \"paste-cell\",\r\n        value: \"Paste into cell/selected rows\",\r\n        isHeader: false\r\n      }\r\n    ]);\r\n  };\r\n\r\n\r\n  defaultMenu(value) {\r\n    switch (value) {\r\n      case \"copy-cell\":\r\n        this.vGrid.vGridConfig.cellValue = this.bindingContext.rowRef[this.value];\r\n        this.toggleMenuOff();\r\n        break;\r\n      case \"paste-cell\":\r\n        if (this.vGrid.vGridConfig.cellValue !== null) {\r\n          var rows = this.vGrid.vGridSelection.getSelectedRows();\r\n          rows.forEach((x)=> {\r\n            this.vGrid.vGridCollectionFiltered[x][this.value] = this.vGrid.vGridConfig.cellValue;\r\n          });\r\n          this.vGrid.vGridGenerator.rebindAllRowSlots();\r\n        }\r\n        this.toggleMenuOff();\r\n        break;\r\n      default:\r\n        this.toggleMenuOff();\r\n    }\r\n  }\r\n\r\n}\r\n"]}