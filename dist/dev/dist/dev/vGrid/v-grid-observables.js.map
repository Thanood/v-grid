{"version":3,"sources":["vGrid/v-grid-observables.js"],"names":[],"mappings":"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","file":"vGrid/v-grid-observables.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    VGridObservables\r\n *    Observers the vGridCollection/current entity for changes\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nexport class VGridObservables {\r\n\r\n\r\n  constructor(vGrid, bindingEngine) {\r\n    this.bindingEngine = bindingEngine;\r\n    this.vGrid = vGrid;\r\n    this.subscriptionsAttributes = []; //here I keep subscriptions to observer on attributes\r\n    this.collectionSubscription = null; //here I keep subscriptions to observer on collection\r\n    this.subscriptionsArray = []; //my property subscriptions\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * observer vGridCollection, when entire vGridCollection gets replaced\r\n   ***************************************************************************************/\r\n  enableObservablesCollection() {\r\n\r\n    let collectionSubscription = (x, y) => {\r\n\r\n      //disable array observer\r\n      this.disableObservablesArray();\r\n\r\n      //clone array\r\n      //key will be set in both collection and internal since with slice we get a refrence\r\n      this.vGrid.vGridCollectionFiltered = this.vGrid.vGridCollection.slice(0);\r\n      this.vGrid.checkKeys();\r\n\r\n\r\n      //reset filter/and collection/selection. (should I have option to check is they want to set something?)\r\n      this.vGrid.vGridCurrentRow = -1;\r\n      this.vGrid.vGridSort.reset();\r\n      if(!this.vGrid.vGridConfig.keepFilterOnCollectionChange){\r\n        //clear sort icons //todo improve with event\r\n        this.vGrid.vGridSort.reset();\r\n        this.vGrid.vGridGenerator.rebuildGridHeaderHtmlAndViewSlot();\r\n\r\n        this.vGrid.vGridSelection.reset();\r\n        this.vGrid.vGridConfig.keepFilterOnCollectionChange = false;\r\n      }\r\n      this.vGrid.vGridGenerator.collectionChange();\r\n\r\n      //reset\r\n      for (var k in this.vGrid.vGridCurrentEntity) {\r\n        if (this.vGrid.vGridCurrentEntity.hasOwnProperty(k)) {\r\n          this.vGrid.vGridCurrentEntity[k] = undefined;\r\n        }\r\n      }\r\n\r\n\r\n      //set array observer\r\n      this.enableObservablesArray();\r\n\r\n\r\n\r\n    };\r\n    this.vGrid.__observers__.vGridCollection.subscribe(this.vGrid,collectionSubscription);\r\n    this.collectioncallable = collectionSubscription;\r\n\r\n    this.collectionSubscription = this.vGrid.__observers__.vGridCollection;\r\n\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * enable attributes observables, like vGridCollection.push/pop/slice, etc etc\r\n   ***************************************************************************************/\r\n  enableObservablesArray() {\r\n\r\n    let arrayObserver = this.bindingEngine.collectionObserver(this.vGrid.vGridCollection).subscribe((arrayObserverChanges) => {\r\n\r\n      var colFiltered = this.vGrid.vGridCollectionFiltered;\r\n      var col = this.vGrid.vGridCollection;\r\n      var grid = this.vGrid.vGridGenerator;\r\n\r\n\r\n      var curKey = -1;\r\n      if (this.vGrid.vGridCurrentEntityRef) {\r\n        curKey = this.vGrid.vGridCurrentEntityRef[this.vGrid.vGridRowKey];\r\n      }\r\n      var curEntityValid = true;\r\n\r\n\r\n      if (arrayObserverChanges.length > 0) {\r\n\r\n        var added = false;\r\n        var toRemove = [];\r\n\r\n        //loop arrayObserverChanges\r\n        arrayObserverChanges.forEach((observerChange)=> {\r\n\r\n          //if anyone is added, then lets add them\r\n          if (observerChange.addedCount > 0) {\r\n            for (var i = 0; i < observerChange.addedCount; i++) {\r\n              colFiltered.push(col[observerChange.index + i]);\r\n              this.vGrid.checkKey(col[observerChange.index + i]);\r\n            }\r\n          }\r\n\r\n          //if anyone is removed, then lets remove them from our filtered collection\r\n          if (observerChange.removed.length > 0) {\r\n            //push into removed array\r\n            observerChange.removed.forEach((x) => {\r\n              if (x[this.vGrid.vGridRowKey] === curKey) {\r\n                curEntityValid = false;\r\n              }\r\n\r\n              var rowToRemove = -1;\r\n              colFiltered.forEach((row, index) => {\r\n                if (row[this.vGrid.vGridRowKey] === x[this.vGrid.vGridRowKey]) {\r\n                  rowToRemove = index;\r\n                }\r\n              });\r\n              if (rowToRemove !== -1) {\r\n                colFiltered.splice(rowToRemove, 1);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n\r\n        var newRowNo = -1;\r\n\r\n        //check current entity, remove if removed, or get key/row\r\n        if (!curEntityValid) {\r\n\r\n          //no current entity, lets remove the result and null out ref/row\r\n          for (var k in this.vGrid.vGridCurrentEntity) {\r\n            if (this.vGrid.vGridCurrentEntity.hasOwnProperty(k)) {\r\n              this.vGrid.vGridCurrentEntity[k] = undefined;\r\n            }\r\n          }\r\n          this.vGrid.vGridCurrentEntityRef = null;\r\n          this.vGrid.vGridCurrentRow = -1;\r\n\r\n        } else {\r\n\r\n          //if there is a current entity, then we need to find the row of the key\r\n          if (curKey !== -1) {\r\n            this.vGrid.vGridCollectionFiltered.forEach((x, index) => {\r\n              if (curKey === x[this.vGrid.vGridRowKey]) {\r\n                this.vGrid.vGridCurrentRow = index;\r\n              }\r\n            });\r\n          }\r\n\r\n        }//end if (!curEntityValid)\r\n\r\n\r\n        //update grid\r\n        grid.collectionChange(false);\r\n\r\n\r\n      }\r\n\r\n\r\n    });\r\n    this.subscriptionsArray = arrayObserver\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * enable attributes abservables, ->vGridCollection.name etc\r\n   ***************************************************************************************/\r\n  enableObservablesAttributes() {\r\n    this.vGrid.vGridConfig.attAttributeObserve.forEach((property) => {\r\n      let propertyObserver = this.bindingEngine.propertyObserver(this.vGrid.vGridCurrentEntity, property).subscribe((newValue, oldValue) => {\r\n\r\n        //should I do the value formatting on the currentEntity also?\r\n        var newValueCheck = (newValue !== undefined && newValue !== null) ? newValue.toString() : newValue;\r\n        var oldValueCheck = (oldValue !== undefined && oldValue !== null) ? oldValue.toString() : oldValue;\r\n\r\n        if (newValueCheck !== oldValueCheck && this.vGrid.vGridCurrentEntityRef) {\r\n              this.vGrid.vGridCurrentEntityRef[property] = newValue;\r\n              this.vGrid.vGridGenerator.rebindRowNumber(this.vGrid.vGridCurrentRow);\r\n        }\r\n      });\r\n      this.subscriptionsAttributes.push(propertyObserver)\r\n    });\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   *  disable vGridCollection observables\r\n   ***************************************************************************************/\r\n  disableObservablesCollection() {\r\n    this.collectionSubscription.unsubscribe(this.vGrid, this.collectioncallable);\r\n    //this.collectionSubscription = null;\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * disable the array observables\r\n   ***************************************************************************************/\r\n  disableObservablesArray() {\r\n    this.subscriptionsArray.dispose();\r\n    this.subscriptionsArray = null;\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * disable the attibutes observables\r\n   ***************************************************************************************/\r\n  disableObservablesAttributes() {\r\n    for (var i = 0; i < this.subscriptionsAttributes.length; i++) {\r\n      try {\r\n        this.subscriptionsAttributes[i].dispose()\r\n      } catch (e) {\r\n      }\r\n    }\r\n    this.subscriptionsAttributes = [];\r\n  }\r\n\r\n\r\n}\r\n"]}