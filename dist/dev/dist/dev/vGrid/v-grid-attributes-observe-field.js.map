{"version":3,"sources":["vGrid/v-grid-attributes-observe-field.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAKQ,Y,qBAAA,M;AAAQ,qB,qBAAA,e;AAAiB,mB,qBAAA,a;;AACzB,W,UAAA,K;;;6CAKK,2B,WAFZ,gBAAgB,iBAAhB,C,UACA,OAAO,OAAP,EAAgB,KAAhB,EAAuB,aAAvB,C;AAIC,6CAAY,OAAZ,EAAqB,KAArB,EAA4B,aAA5B,EAA2C;AAAA;;AACzC,eAAK,KAAL,GAAa,KAAb;AACA,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,KAAL,GAAa,IAAb;AACA,eAAK,aAAL,GAAqB,aAArB;AACD;;8CAGD,I,iBAAK,c,EAAgB,e,EAAiB;AAAA;;AACpC,eAAK,cAAL,GAAsB,cAAtB;AACA,eAAK,eAAL,GAAuB,eAAvB;;AAEA,cAAG,KAAK,gBAAR,EAAyB;AACvB,iBAAK,gBAAL,CAAsB,OAAtB;AACA,iBAAK,gBAAL,GAAwB,IAAxB;AACD;;AAED,cAAI,YAAY,KAAK,KAArB;;AAGA,cAAI,aAAa,KAAK,cAAL,CAAoB,MAArC,EAA6C;AAG3C,iBAAK,KAAL,CAAW,gBAAX,CAA4B,4BAA5B;;AAGA,gBAAI,sBAAsB,KAAK,KAAL,CAAW,WAAX,CAAuB,mBAAjD;AACA,gBAAI,aAAY,KAAK,KAArB;;AAEA,gBAAI,oBAAoB,OAApB,CAA4B,UAA5B,MAA2C,CAAC,CAA5C,IAAiD,UAArD,EAAgE;AAC9D,kCAAoB,IAApB,CAAyB,UAAzB;AACD;;AAED,iBAAK,KAAL,CAAW,gBAAX,CAA4B,2BAA5B;;AAIA,iBAAK,gBAAL,GAAwB,KAAK,aAAL,CAAmB,gBAAnB,CAAoC,KAAK,cAAL,CAAoB,MAAxD,EAAgE,KAAK,KAArE,EAA4E,SAA5E,CAAsF,UAAC,QAAD,EAAW,QAAX,EAAwB;AAGpI,kBAAI,gBAAiB,aAAa,SAAb,IAA0B,aAAa,IAAxC,GAAgD,SAAS,QAAT,EAAhD,GAAsE,QAA1F;AACA,kBAAI,gBAAiB,aAAa,SAAb,IAA0B,aAAa,IAAxC,GAAgD,SAAS,QAAT,EAAhD,GAAsE,QAA1F;;AAEA,kBAAI,kBAAkB,aAAlB,IAAmC,MAAK,KAAL,CAAW,qBAAlD,EAAyE;AACvE,sBAAK,KAAL,CAAW,kBAAX,CAA8B,MAAK,KAAnC,IAA4C,QAA5C;AACD;AACF,aATuB,CAAxB;AAUD;AAEF,S;;8CAED,M,qBAAS;AACP,cAAG,KAAK,gBAAR,EAAyB;AACvB,iBAAK,gBAAL,CAAsB,OAAtB;AACA,iBAAK,gBAAL,GAAwB,IAAxB;AACD;AAEF,S","file":"vGrid/v-grid-attributes-observe-field.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\n *    Just to have instant update on row events over to current entity\n *    Created by vegar ringdal\n *\n ****************************************************************************************************************/\nimport {inject, customAttribute, BindingEngine} from 'aurelia-framework';\nimport {VGrid} from './v-grid';\n\n\n@customAttribute('v-observe-field')\n@inject(Element, VGrid, BindingEngine)\nexport class vGridAttributesObserveField {\n\n\n  constructor(element, vGrid, bindingEngine) {\n    this.vGrid = vGrid;\n    this.element = element;\n    this.timer = null;\n    this.bindingEngine = bindingEngine;\n  }\n\n\n  bind(bindingContext, overrideContext) {\n    this.bindingContext = bindingContext;\n    this.overrideContext = overrideContext;\n\n    if(this.propertyObserver){\n      this.propertyObserver.dispose();\n      this.propertyObserver = null;\n    }\n\n    let attribute = this.value;\n\n    //if there is any value and rowRef\n    if (attribute && this.bindingContext.rowRef) {\n\n      //remove old binding to current entity\n      this.vGrid.vGridObservables.disableObservablesAttributes();\n\n      //add to our observer array\n      var attAttributeObserve = this.vGrid.vGridConfig.attAttributeObserve;\n      let attribute = this.value;\n      //if not allready added, then lets add them\n      if (attAttributeObserve.indexOf(attribute) === -1 && attribute) {\n        attAttributeObserve.push(attribute);\n      }\n      //enable observer\n      this.vGrid.vGridObservables.enableObservablesAttributes();\n\n\n      //observe property on rowref\n      this.propertyObserver = this.bindingEngine.propertyObserver(this.bindingContext.rowRef, this.value).subscribe((newValue, oldValue) => {\n\n        //should I do the value formatting on the currentEntity also?\n        var newValueCheck = (newValue !== undefined && newValue !== null) ? newValue.toString() : newValue;\n        var oldValueCheck = (oldValue !== undefined && oldValue !== null) ? oldValue.toString() : oldValue;\n\n        if (newValueCheck !== oldValueCheck && this.vGrid.vGridCurrentEntityRef) {\n          this.vGrid.vGridCurrentEntity[this.value] = newValue;\n        }\n      });\n    }\n\n  }\n\n  unbind() {\n    if(this.propertyObserver){\n      this.propertyObserver.dispose();\n      this.propertyObserver = null;\n    }\n\n  }\n\n\n}\n"]}