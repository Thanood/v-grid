{"version":3,"sources":["vGrid/v-grid-ctx.js"],"names":[],"mappings":"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","file":"vGrid/v-grid-ctx.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\n *    VGridClientCtx\n *    This will contexin all functions that I expose to client side in gridcontext xxxx.ctx\n *    Created by vegar ringdal\n *\n ****************************************************************************************************************/\n\nexport class VGridCtx {\n\n  constructor(vGrid) {\n    this.vGrid = vGrid;\n  }\n\n  /***************************************************************************************\n   * getters/setters to make it easier\n   ***************************************************************************************/\n\n  get vGridSelection() {\n    if (this.vGrid) {\n      return this.vGrid.vGridSelection;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridConfig() {\n    if (this.vGrid) {\n      return this.vGrid.vGridConfig;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridCellHelper() {\n    if (this.vGrid) {\n      return this.vGrid.vGridCellHelper;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridElement() {\n    if (this.vGrid) {\n      return this.vGrid.element;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridSortable() {\n    if (this.vGrid) {\n      return this.vGrid.vGridSortable;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridResizable() {\n    if (this.vGrid) {\n      return this.vGrid.vGridResizable;\n    } else {\n      return null;\n    }\n  }\n\n\n  get vGridFilter() {\n    if (this.vGrid) {\n      return this.vGrid.vGridFilter;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridSort() {\n    if (this.vGrid) {\n      return this.vGrid.vGridSort;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridObservables() {\n    if (this.vGrid) {\n      return this.vGrid.vGridObservables;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridGenerator() {\n    if (this.vGrid) {\n      return this.vGrid.vGridGenerator;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridCurrentEntityRef() {\n    if (this.vGrid) {\n      return this.vGrid.vGridCurrentEntityRef;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridRowKey() {\n    if (this.vGrid) {\n      return this.vGrid.vGridRowKey;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridCollectionFiltered() {\n    if (this.vGrid) {\n      return this.vGrid.vGridCollectionFiltered;\n    } else {\n      return null;\n    }\n  }\n\n  get vGridCollection() {\n    if (this.vGrid) {\n      return this.vGrid.vGridCollection;\n    } else {\n      return null;\n    }\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  setData(data) {\n    this.vGridConfig.remoteLimit = data.limit || 40;\n    this.vGridConfig.remoteLength = data.length || 0;\n    this.vGridConfig.remoteOffset = data.offset || 0;\n    this.keepFilterOnCollectionChange();\n    this.vGrid.vGridCollection = data.col || [];\n    this.setLoadingOverlay(false);\n    this.vGrid.vGridPager.updatePager({\n      limit: this.vGridConfig.remoteLimit,\n      offset: this.vGridConfig.remoteOffset,\n      length: this.vGridConfig.remoteLength\n    });\n    \n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  keepFilterOnCollectionChange() {\n    this.vGridConfig.keepFilterOnCollectionChange = true;\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  rebuildColumns() {\n    this.vGridGenerator.rebuildColumns();\n  }\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  scrollBottom() {\n    var collectionLength = this.vGridConfig.getCollectionLength();\n    this.contentElement.scrollTop = collectionLength * this.vGridConfig.attRowHeight;\n  };\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  scrollTop() {\n    this.vGridGenerator.contentElement.scrollTop = 0;\n  };\n\n\n  setScrollTop(newTop) {\n    this.vGridGenerator.contentElement.scrollTop = newTop;\n  };\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  rebuildColumnsRows() {\n    this.vGridGenerator.rebuildColumnsRows();\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  columnChangeAndCollection(resetScrollToTop) {\n    this.vGridGenerator.columnChangeAndCollection(resetScrollToTop);\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  redrawGrid() {\n    this.vGridGenerator.redrawGrid();\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  showSelectedAndNotSelected() {\n    this.vGrid.vGridCollectionFiltered = this.vGrid.vGridCollection.slice(0);\n    this.vGridGenerator.collectionChange();\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  showOnlySelected() {\n    let newArray = [];\n    this.vGridCollection.forEach((x, i)=> {\n      if(this.vGridSelection.isSelectedMain(i)){\n        newArray.push(x)\n      }\n    });\n    this.vGrid.vGridCollectionFiltered = newArray;\n    this.vGridGenerator.collectionChange();\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  showOnlyNotSelected() {\n    let newArray = [];\n    this.vGridCollection.forEach((x, i)=> {\n      if(!this.vGridSelection.isSelectedMain(i)){\n        newArray.push(x)\n      }\n    });\n    this.vGrid.vGridCollectionFiltered = newArray;\n    this.vGridGenerator.collectionChange();\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  setColumns(paramObj) {\n    this.vGridConfig.colConfig = paramObj.colConfig;\n  };\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  getColumns() {\n    var arr = [];\n    this.vGridConfig.colConfig.forEach((obj)=> {\n      let x = {};\n      for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          if (x[k] !== obj[k]) {\n            x[k] = obj[k];\n          }\n        }\n      }\n      arr.push(x);\n    });\n    return {\n      \"colConfig\": arr\n    }\n  };\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  getMaxRows() {\n    //https://github.com/mleibman/SlickGrid/blob/bf4705a96c40fea088216034def4d0256a335e65/slick.grid.js\n    var supportedHeight = 10000;\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 8947840 : 1000000000;\n    var div = document.createElement(\"div\");\n    //div.style.display = \"none\";\n    document.body.appendChild(div);\n\n    while (true) {\n      var test = supportedHeight + 10000;\n      div.style.height = test + \"px\";\n      if (test > testUpTo || div.clientHeight !== test) {\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n    document.body.removeChild(div);\n    var total = Math.ceil(supportedHeight / this.vGridConfig.attRowHeight); //lol\n    return total + \", error margin:\" + Math.ceil(10000 / this.vGridConfig.attRowHeight);\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  scrollBottomNext() {\n    this.vGridGenerator.scrollBottomOnNext = true;\n  };\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  setLoadingOverlay(value) {\n    this.vGrid.loading = value === true ? true : false;\n  }\n\n\n  /****************************************************************************************************************************\n   * explain\n   ****************************************************************************************************************************/\n  getScrollTop() {\n    return this.vGridGenerator.contentElement.scrollTop;\n  };\n\n\n  /****************************************************************************************************************************\n   * remote external call for pager\n   ****************************************************************************************************************************/\n  remoteGoToFirst(){\n    this.vGrid.loading = true;\n    this.vGridConfig.remoteOffset = 0;\n    this.vGridConfig.remoteCall();\n  }\n\n\n\n  remoteGoToNext(){\n    this.vGrid.loading = true;\n    this.vGridConfig.remoteOffset = this.vGridConfig.remoteOffset + this.vGridConfig.remoteLimit;\n    this.vGridConfig.remoteCall();\n  }\n\n\n  remoteGoToPage(x){\n    this.vGrid.loading = true;\n    this.vGridConfig.remoteOffset = x * this.vGridConfig.remoteLimit;\n    this.vGridConfig.remoteCall();\n  }\n\n\n  remoteGoToOffset(x){\n    this.vGrid.loading = true;\n    this.vGridConfig.remoteOffset = x;\n    this.vGridConfig.remoteCall();\n  }\n    \n\n  remoteGoTofirstPrev(){\n    this.vGrid.loading = true;\n    this.vGridConfig.remoteOffset = this.vGridConfig.remoteOffset - this.vGridConfig.remoteLimit;\n    this.vGridConfig.remoteCall();\n  }\n\n\n\n  remoteGoTofirstLast(){\n    this.vGrid.loading = true;\n    this.vGridConfig.remoteOffset = this.vGridConfig.remoteLength-this.vGridConfig.remoteLimit;\n    this.vGridConfig.remoteCall();\n  }\n\n\n}\n"]}